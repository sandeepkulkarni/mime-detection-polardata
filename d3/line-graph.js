$(document).ready(function() {
    var width = 658, height = 450;

    var color = ["#1792e4", "#ff4248", "#51b23b", "#ff6e00", "#9574D4", "#008751", "#ac51ad", "#044187", "#ff3467"];
    var colorLight = ["#97d2ff", "#ff9298", "#a1f27b", "#ffae50", "#9574D4", "#008751", "#ac51ad", "#044187", "#ff3467"];
    var timeFormat = d3.time.format('%b %d');

    var dates = [ 0,1,2,3,4,5,6,7,8,9
        /*new Date('10/5/2013'),
        new Date('10/6/2013'),
        new Date('10/7/2013'),
        new Date('10/8/2013'),
        new Date('10/9/2013'),
        new Date('10/10/2013'),
        new Date('10/11/2013'),
        new Date('10/12/2013'),
        new Date('10/13/2013'),
        new Date('10/14/2013')*/
    ];

    var dataRaw = [
        [0.27685185185185185, 0.13416933823337762, 0.10398280640480968, 0.13711370882963655, 0.1177741722487207, 0.10169068904701088, 0.09178808177166141, 0.11260002085125237, 0.09160519891225967, 0.09115277017575868, 0.1309554103452068, 0.07418419475069721, 0.07631819011129355, 0.09991735680839021, 0.08919644486146949, 0.08013679290362377, 0.08276687431038826, 0.0812642809358737, 0.09245684225158773, 0.06668078470213118, 0.15308620255254082, 0.09826673964605, 0.07253086419753087, 0.06546641645163813, 0.07837247287165186, 0.0721659672809098, 0.08022323872077568, 0.06392820218764389, 0.08746427051024754, 0.08827377694372768, 0.08997467441638214, 0.08310244915335227, 0.5846059811297344, 0.05554491272882077, 0.08957547331815427, 0.087887158140954, 0.09503240632140468, 0.05744867551107288, 0.06753199364036802, 0.07833769689180331, 0.10061721263319023, 0.08804412464959323, 0.08579059383128873, 0.08789259156172184, 0.224856792715317, 0.11018724371506719, 0.18188121745406002, 0.10958842417395749, 0.4095179387288035, 0.2743148359756338, 0.29809471291025885, 0.22085101314700542, 0.22836051741383365, 0.2765600904272761, 0.22614903933631517, 0.197896310481475, 0.23180205816186694, 0.2631801681614972, 0.0969737366413991, 0.08425904205871365, 0.08406248558548475, 0.11098395960692953, 0.09525488685116512, 0.08754528631375923, 0.08657374827325565, 0.13488975226675726, 0.11594324543717471, 0.11294133218292772, 0.10693235980918651, 0.12168154631770992, 0.13401079678790045, 0.09708386547467007, 0.09347773734806925, 0.09624161116935379, 0.07883923684416295, 0.06798268477250413, 0.049162881469514565, 0.07320904282962312, 0.054469335626971094, 0.08400079060998603, 0.07681773180784846, 0.07296331048383593, 0.07701040825014553, 0.06700827699907624, 0.09059169145787474, 0.07723607154766188, 0.08694624720897298, 0.08017719220510683, 0.08061724051050816, 0.07805449127288207, 0.07664529413297887, 0.0971294468636647, 0.07502157152488038, 0.08117389478331788, 0.07552562532037081, 0.08101615031075524, 0.08227534947567788, 0.14931400442102064, 0.06676228043527813, 0.10197578588446847, 0.10206180285089343, 0.16806635666428377, 0.08574572992673041, 0.16427698675761973, 0.09643989267303511, 0.17207340796896933, 0.10879217323355433, 0.07268732369947052, 0.09349012055101544, 0.13765063145290476, 0.12484716894367301, 0.11762517294615815, 0.1352679399004952, 0.09194447925136208, 0.1257469629163669, 0.1559837635168011, 0.1559764211592148, 0.08148774276011599, 0.07627089178945386, 0.08152211888711822, 0.12912138818831875, 0.10048689657590656, 0.08940950709765298, 0.06558873951279977, 0.07405778403315348, 0.06618538941158432, 0.07402042553930895, 0.07252326217843458, 0.09317838246409675, 0.07747282821174446, 0.08333572253933502, 0.0769400352733686, 0.0676458067262665, 0.07089556128964997, 0.06875070590177322, 0.06883497971346902, 0.0645821930304689, 0.07865114117166663, 0.07712487293768083, 0.07602388337199503, 0.08342911877394636, 0.07011211892164274, 0.08693147757187167, 0.07769415556771879, 0.07441182092249415, 0.09214776587518787, 0.062328302968697055, 0.06944683365044613, 0.06230571411195385, 0.06529743442715527, 0.07880122674868159, 0.05951034308998185, 0.04685232969305219, 0.05913936455808376, 0.062140858897837555, 0.05218069347790202, 0.08816756587692548, 0.06473597101675918, 0.07963397364054178, 0.06827243030034491, 0.08040134316817403, 0.07372655320110165, 0.06318385591784607, 0.07456625051042129, 0.08044000486529222, 0.06793859306174578, 0.06777308624599264, 0.07864592835857204, 0.0670925969366035, 0.07672001112066792, 0.0735890652557319, 0.06484478849010869, 0.07363207096376226, 0.08912932989287668, 0.07616332612227522, 0.07421069321726136, 0.06969617987680385, 0.06258112440378451, 0.0639620854727587, 0.07531211718403837, 0.078807091163413, 0.08733134377633557, 0.06921225706118975, 0.07834054439144751, 0.07770697039990965, 0.0750753685893259, 0.05179168730071851, 0.06617296982650021, 0.07088318085855032, 0.07444505260597215, 0.06724463731852895, 0.05524517597588205, 0.08890539613035507, 0.07722587119138843, 0.06852221092779384, 0.08671471142735511, 0.07750649429631368, 0.07167596285001868, 0.08084269467684903, 0.08904722808663695, 0.09001138130858984, 0.06751570359944743, 0.058730810331795565, 0.054101180702165935, 0.05424887707317921, 0.062678864649308, 0.07103782764702306, 0.08473232204759298, 0.06441994422289989, 0.05991346730262987, 0.07960247956142867, 0.08252903971294774, 0.0917405148521733, 0.073038027471525, 0.08231357677170484, 0.08962085472758707, 0.07505104212821784, 0.06537540942302847, 0.08957480821191824, 0.08576359023813868, 0.08216001598596016, 0.0630172630993649, 0.08165285271196603, 0.05379232152631167, 0.09092079999304958, 0.07830492350196784, 0.07779645702470005, 0.09116536780740393, 0.07470982007106802, 0.0600820149260215, 0.0748631636562671, 0.08798490021806936, 0.07233799011303116, 0.08278902876604026, 0.08035768585850687, 0.08212352629429805, 0.06842729428936326, 0.0831033179555347, 0.06813624555824883, 0.07240401907889593, 0.09160454731062284, 0.09714946003944362, 0.06557154151571229, 0.0636849375765632, 0.0774183108747969, 0.0841541341951851, 0.07306496033918036, 0.07600954813598491, 0.09484930626145732, 0.07562988158226253, 0.0748631636562671, 0.06940056993423167, 0.08393693364957733, 0.07048635546172491, 0.06670489396269363, 0.10576928089243359],
        [0.07505104212821784,0.22085101314700542,0.08940950709765298,0.07830492350196784,0.05524517597588205,0.09317838246409675,0.07616332612227522,0.08216001598596016,0.08393693364957733,0.09001138130858984,0.10061721263319023,0.06537540942302847,0.09503240632140468,0.08473232204759298,0.08671471142735511,0.06668078470213118,0.06852221092779384,0.0676458067262665,0.11018724371506719,0.29809471291025885,0.0748631636562671,0.07722587119138843,0.09347773734806925,0.05951034308998185,0.06230571411195385,0.06969617987680385,0.08957480821191824,0.07252326217843458,0.06777308624599264,0.06392820218764389,0.06798268477250413,0.11098395960692953,0.07627089178945386,0.08022323872077568,0.07421069321726136,0.08227534947567788,0.06753199364036802,0.08035768585850687,0.07865114117166663,0.06546641645163813,0.08061724051050816,0.12168154631770992,0.073038027471525,0.07306496033918036,0.08912932989287668,0.07834054439144751,0.054101180702165935,0.224856792715317,0.06473597101675918,0.0774183108747969,0.09116536780740393,0.07296331048383593,0.08754528631375923,0.09059169145787474,0.07502157152488038,0.06921225706118975,0.07750649429631368,0.06318385591784607,0.08997467441638214,0.14931400442102064,0.1559837635168011,0.07562988158226253,0.08804412464959323,0.23180205816186694,0.0600820149260215,0.08400079060998603,0.07233799011303116,0.062328302968697055,0.08789259156172184,0.07600954813598491,0.13416933823337762,0.07747282821174446,0.08101615031075524,0.2743148359756338,0.07664529413297887,0.08276687431038826,0.08425904205871365,0.07880122674868159,0.08576359023813868,0.1352679399004952,0.17207340796896933,0.09178808177166141,0.08694624720897298,0.08231357677170484,0.06827243030034491,0.07320904282962312,0.06529743442715527,0.07805449127288207,0.09643989267303511,0.1309554103452068,0.10206180285089343,0.09826673964605,0.10048689657590656,0.15308620255254082,0.07531211718403837,0.09349012055101544,0.07418419475069721,0.07552562532037081,0.5846059811297344,0.07444505260597215,0.06875070590177322,0.0645821930304689,0.07088318085855032,0.09624161116935379,0.05179168730071851,0.09214776587518787,0.08278902876604026,0.06842729428936326,0.06944683365044613,0.049162881469514565,0.13711370882963655,0.0636849375765632,0.10693235980918651,0.08342911877394636,0.07779645702470005,0.05991346730262987,0.0971294468636647,0.0831033179555347,0.07883923684416295,0.10197578588446847,0.0630172630993649,0.09092079999304958,0.09160454731062284,0.09525488685116512,0.08013679290362377,0.08693147757187167,0.06813624555824883,0.08017719220510683,0.09160519891225967,0.08890539613035507,0.05913936455808376,0.16427698675761973,0.07960247956142867,0.07372655320110165,0.07456625051042129,0.10576928089243359,0.07712487293768083,0.07833769689180331,0.2631801681614972,0.06557154151571229,0.10879217323355433,0.0917405148521733,0.08957547331815427,0.0748631636562671,0.1257469629163669,0.06670489396269363,0.09991735680839021,0.08333572253933502,0.08148774276011599,0.07441182092249415,0.27685185185185185,0.06724463731852895,0.08044000486529222,0.07672001112066792,0.07167596285001868,0.09708386547467007,0.06940056993423167,0.06700827699907624,0.0812642809358737,0.08252903971294774,0.07681773180784846,0.0670925969366035,0.08904722808663695,0.11594324543717471,0.062140858897837555,0.07769415556771879,0.05218069347790202,0.11260002085125237,0.07470982007106802,0.05554491272882077,0.058730810331795565,0.0639620854727587,0.08919644486146949,0.0721659672809098,0.08574572992673041,0.2765600904272761,0.0841541341951851,0.11762517294615815,0.22836051741383365,0.08733134377633557,0.08827377694372768,0.06441994422289989,0.10398280640480968,0.07602388337199503,0.13765063145290476,0.06883497971346902,0.09245684225158773,0.12912138818831875,0.08165285271196603,0.08117389478331788,0.07864592835857204,0.08212352629429805,0.08084269467684903,0.07402042553930895,0.07268732369947052,0.1177741722487207,0.13401079678790045,0.13488975226675726,0.08579059383128873,0.08816756587692548,0.10169068904701088,0.4095179387288035,0.09194447925136208,0.07770697039990965,0.0750753685893259,0.06617296982650021,0.05744867551107288,0.08310244915335227,0.09484930626145732,0.09714946003944362,0.0769400352733686,0.07089556128964997,0.078807091163413,0.05424887707317921,0.07723607154766188,0.07701040825014553,0.07103782764702306,0.08040134316817403,0.054469335626971094,0.0969737366413991,0.04685232969305219,0.0735890652557319,0.07837247287165186,0.08406248558548475,0.08152211888711822,0.197896310481475,0.07253086419753087,0.1559764211592148,0.07631819011129355,0.06484478849010869,0.06258112440378451,0.18188121745406002,0.06751570359944743,0.11294133218292772,0.08798490021806936,0.07240401907889593,0.08657374827325565,0.07011211892164274,0.05379232152631167,0.07048635546172491,0.07963397364054178,0.12484716894367301,0.07405778403315348,0.07363207096376226,0.087887158140954,0.06676228043527813,0.08962085472758707,0.062678864649308,0.22614903933631517,0.10958842417395749,0.08746427051024754,0.06558873951279977,0.06793859306174578,0.09115277017575868,0.16806635666428377,0.06618538941158432]
    ];
    var dataNamesRaw = ['mime1', 'mine2'];

    var graphOld = function(id, num, title) {
        var data = dataRaw.slice(0, num);
        var dataNames = dataNamesRaw.slice(0, num);

        var margin = {
            top: 50,
            bottom: 75,
            left: 70,
            right: 30
        };

        var tooltip = id + '-tooltip';

        var findSeries = function(data, d, i) {
            for(var j = 0; j < data.length; j++) {
                if(data[j][i] === d) return j;
            }
        }

        var render = function() {

            var multi = false;
            if(data.length > 1) {
                margin.right = 140;
                multi = true;
            }

            var minY = 0, maxY = 1;
            var minX = dates[0], maxX = dates[dates.length - 1];

            var x = d3.time.scale().domain([minX, maxX]).range([margin.left, width - margin.right]);
            var y = d3.scale.linear().domain([minY, maxY]).range([height - margin.bottom, margin.top]);

            var xAxis = d3.svg.axis()
                .tickFormat(d3.format('d'))
                .scale(x)
                .ticks(7)
                .tickFormat(timeFormat);

            var yAxis = d3.svg.axis()
                .scale(y)
                .orient('left')
                .ticks(10)
                .tickSize(margin.right + margin.left - width);

            var line = d3.svg.line()
                .x(function(d,i) { return x(dates[i]); })
                .y(function(d,i) { return y(d); })
                .interpolate('monotone');

            var area = d3.svg.area()
                .x(function(d,i) { return x(dates[i]); })
                .y0(function(d) { return y(minY); })
                .y1(function(d) { return y(d); })
                .interpolate('monotone');

            var svg = d3.select('#' + id)
                .append('svg')
                .attr('width', width)
                .attr('height', height);

            // LINE GRAPH
            // var graphBg = svg.append('g').append('rect')
            //   .attr('x', 0)
            //   .attr('y', 0)
            //   .attr('width', width)
            //   .attr('height', height)
            //   .attr('fill', '#fff');

            var titleElem = svg.append('g').append('text')
                .text(title)
                .attr('x', width / 2)
                .attr('y', 28)
                .attr('text-anchor', 'middle')
                .attr('class', 'title');

            var xAxisElem = svg.append('g')
                .attr('class', 'x axis')
                .attr('transform', 'translate(0,' + y(minY) + ')')
                .call(xAxis)
                .selectAll('text')
                .attr('transform', function(d) { return 'rotate(-45,' + this.getAttribute('x') + ',' + this.getAttribute('y') + ')'; })
                .style('text-anchor', 'end')

            var yAxisElem = svg.append('g')
                .attr('class', 'y axis')
                .attr('transform', 'translate(' + x(minX) + ',0)')
                .call(yAxis);

            var xAxisLabel = svg.append('g').append('text')
                .text('Date')
                .attr('x', (width - margin.left - margin.right) / 2 + margin.left)
                .attr('y', height - 12)
                .attr('text-anchor', 'middle')
                .attr('class', 'label');

            var yAxisLabel = svg.append('g').append('text')
                .text('Watch Demo Video')
                .attr('x', margin.left - 45)
                .attr('y', height / 2)
                .attr('text-anchor', 'middle')
                .attr('transform', 'rotate(270, ' + (margin.left - 45) + ', ' + (height / 2) + ')')
                .attr('class', 'label');

            var lineGraph = svg.append('g').selectAll('path')
                .data(data)
                .enter().append('path')
                .attr('d', function(d) { return line(d); })
                .attr('stroke', function(d, i) { return color[i]; })
                .attr('fill', 'none')
                .attr('stroke-width', '3px');

            if(!multi) {
                var lineArea = svg.append('g').selectAll('path')
                    .data(data)
                    .enter().append('path')
                    .attr('class', 'area')
                    .attr('d', function(d) { return area(d); })
                    .attr('fill', function(d, i) { return color[i]; })
                    .style('opacity', 0.15);
            }
            else {
                // LEGEND
                var legendRects = svg.append('g').selectAll('rect')
                    .data(dataNames)
                    .enter().append('rect')
                    .attr('width', 18)
                    .attr('height', 18)
                    .attr('fill', function(d,i) { return color[i]; })
                    .attr('x', width - 30)
                    .attr('y', function(d, i) { return 50 + i * 20; });

                var legendLabels = svg.append('g').selectAll('text')
                    .data(dataNames)
                    .enter().append('text')
                    .text(function(d) { return d; })
                    .attr('font-size', '11px')
                    .attr('text-anchor', 'end')
                    .attr('x', width - 34)
                    .attr('y', function(d, i) { return 62 + i * 20; });
            }


            var circle = svg.append('g').selectAll('g')
                .data(data)
                .enter().append('g').selectAll('circle')
                .data(function(d) { return d; })
                .enter().append('circle')
                .attr('cx', function(d,i) { return x(dates[i]); })
                .attr('cy', function(d) { return y(d); })
                .attr('r', 5)
                .attr('fill', '#fff')
                .attr('stroke', function(d, i) {
                    return color[findSeries(data, d, i)];
                })
                .attr('stroke-width', '3px')
                .on('mouseover', function(d,i) {
                    // TODO
                    var series = findSeries(data, d, i);
                    circle.attr('fill', '#fff');
                    $(this).attr('fill', colorLight[series]);

                    var mouseX = x(dates[i]);
                    var mouseY = y(d);

                    $('#' + tooltip).show();
                    $('#' + tooltip).css('border-color', color[series]);
                    if(multi) {
                        $('#' + tooltip + ' .tooltip-title').html(dataNames[series]);
                    }
                    $('#' + tooltip + '-key').html(timeFormat(dates[i]) + ': ');
                    $('#' + tooltip + '-value').html(d);
                    $('#' + tooltip).animate(
                        {
                            'left': mouseX + 10,
                            'top': mouseY + 10
                        },
                        100
                    );
                });

        };

        var init = function() {
            render();
        };

        init();
    };

    graphOld('line-graph-old-multi', 4, 'BFA Fingerprint');

});